
mel0977@EWSOWKS0543 MINGW64 ~
$ gitk &
[1] 13612

mel0977@EWSOWKS0543 MINGW64 ~
$ git gui
[1]+  Exit 1                  gitk

mel0977@EWSOWKS0543 MINGW64 ~
$ ll
total 46926
drwxr-xr-x 1 mel0977 1049089        0 Jul 29 09:03 3D Objects/
drwxr-xr-x 1 mel0977 1049089        0 Feb 10  2017 48V_Aurix_SmartActuator/
-rw-r--r-- 1 mel0977 1049089     3817 Mai 30  2017 a.sce
drwxr-xr-x 1 mel0977 1049089        0 Mrz  7  2019 AAM_workspace/
drwxr-xr-x 1 mel0977 1049089        0 Dez 22  2017 adin/
lrwxrwxrwx 1 mel0977 1049089       32 Jul  1  2019 Anwendungsdaten -> /c/Users/m                       el0977/AppData/Roaming/
drwxr-xr-x 1 mel0977 1049089        0 Jul  1  2019 AppData/
drwxr-xr-x 1 mel0977 1049089        0 Nov 26  2019 Application Data/
drwxr-xr-x 1 mel0977 1049089        0 Jan 25  2018 Aurix_Workspace/
drwxr-xr-x 1 mel0977 1049089        0 Jul 20  2017 BW_Gen6_Volvo/
drwxr-xr-x 1 mel0977 1049089        0 Jul 29 09:03 Contacts/
lrwxrwxrwx 1 mel0977 1049089       60 Jul  1  2019 Cookies -> /c/Users/mel0977/A                       ppData/Local/Microsoft/Windows/INetCookies/
drwxr-xr-x 1 mel0977 1049089        0 Okt  3  2018 dana/
drwxr-xr-x 1 mel0977 1049089        0 Nov 21 01:17 Desktop/
drwxr-xr-x 1 mel0977 1049089        0 Nov 21 14:55 Documents/
drwxr-xr-x 1 mel0977 1049089        0 Okt 30 20:04 Downloads/
lrwxrwxrwx 1 mel0977 1049089       68 Jul  1  2019 Druckumgebung -> /c/Users/mel                       0977/AppData/Roaming/Microsoft/Windows/Printer Shortcuts/
drwxr-xr-x 1 mel0977 1049089        0 Feb 22  2016 DV/
drwxr-xr-x 1 mel0977 1049089        0 Jul 12  2016 eclipse/
drwxr-xr-x 1 mel0977 1049089        0 Apr 21  2020 eclipse-workspace/
lrwxrwxrwx 1 mel0977 1049089       26 Jul  1  2019 Eigene Dateien -> /c/Users/me                       l0977/Documents/
drwxr-xr-x 1 mel0977 1049089        0 Jul 29 09:03 Favorites/
drwxr-xr-x 1 mel0977 1049089        0 Jul 20  2017 GEN/
drwxr-xr-x 1 mel0977 1049089        0 Sep  5  2019 GEN6_workspace/
drwxr-xr-x 1 mel0977 1049089        0 Jul 11 16:07 IntelGraphicsProfiles/
drwxr-xr-x 1 mel0977 1049089        0 Jan 10  2017 jlr/
drwxr-xr-x 1 mel0977 1049089        0 Dez 21  2016 jlr_pr/
drwxr-xr-x 1 mel0977 1049089        0 Jan 17  2017 jlr_pr1/
drwxr-xr-x 1 mel0977 1049089        0 Jun 22  2017 LIN_Gateway/
drwxr-xr-x 1 mel0977 1049089        0 Jul 29 09:03 Links/
lrwxrwxrwx 1 mel0977 1049089       30 Jul  1  2019 Lokale Einstellungen -> /c/Us                       ers/mel0977/AppData/Local/
drwxr-xr-x 1 mel0977 1049089        0 Jul  1  2019 MicrosoftEdgeBackups/
-rw-r--r-- 1 mel0977 1049089       23 Apr 30  2020 miktex-console.lock
drwxr-xr-x 1 mel0977 1049089        0 Mai 31  2016 MPLABXProjects/
drwxr-xr-x 1 mel0977 1049089        0 Jul 29 09:03 Music/
lrwxrwxrwx 1 mel0977 1049089       68 Jul  1  2019 Netzwerkumgebung -> /c/Users/                       mel0977/AppData/Roaming/Microsoft/Windows/Network Shortcuts/
-rw-r--r-- 1 mel0977 1049089 23330816 Nov 21 03:49 NTUSER.DAT
-rw-r--r-- 1 mel0977 1049089  3407872 Jul  1  2019 ntuser.dat.LOG1
-rw-r--r-- 1 mel0977 1049089  2097152 Jul  1  2019 ntuser.dat.LOG2
-rw-r--r-- 1 mel0977 1049089    65536 Jul  1  2019 NTUSER.DAT{1c3790b4-b8ad-11e8                       -aa21-e41d2d101530}.TM.blf
-rw-r--r-- 1 mel0977 1049089   524288 Jul  1  2019 NTUSER.DAT{1c3790b4-b8ad-11e8                       -aa21-e41d2d101530}.TMContainer00000000000000000001.regtrans-ms
-rw-r--r-- 1 mel0977 1049089   524288 Jul  1  2019 NTUSER.DAT{1c3790b4-b8ad-11e8                       -aa21-e41d2d101530}.TMContainer00000000000000000002.regtrans-ms
-rw-r--r-- 1 mel0977 1049089       20 Jul  1  2019 ntuser.ini
-r--r--r-- 1 mel0977 1049089     9044 Jun 17 10:00 ntuser.pol
drwxr-xr-x 1 mel0977 1049089        0 Okt 22 10:26 OneDrive/
drwxr-xr-x 1 mel0977 1049089        0 Jul 29 09:03 Pictures/
drwxr-xr-x 1 mel0977 1049089        0 Jul 21  2017 Probe/
lrwxrwxrwx 1 mel0977 1049089       57 Jul  1  2019 Recent -> /c/Users/mel0977/Ap                       pData/Roaming/Microsoft/Windows/Recent/
drwxr-xr-x 1 mel0977 1049089        0 Jan 27  2018 Roaming/
drwxr-xr-x 1 mel0977 1049089        0 Jul 29 09:03 Saved Games/
drwxr-xr-x 1 mel0977 1049089        0 Sep 17 19:38 Searches/
lrwxrwxrwx 1 mel0977 1049089       57 Jul  1  2019 SendTo -> /c/Users/mel0977/Ap                       pData/Roaming/Microsoft/Windows/SendTo/
drwxr-xr-x 1 mel0977 1049089        0 Jun 22  2017 smart48V/
-rwxr-xr-x 1 mel0977 1049089 17847544 Jan 13  2017 SourceTreeSetup_1.9.10.0.exe*
lrwxrwxrwx 1 mel0977 1049089       61 Jul  1  2019 Startmenü -> /c/Users/mel0977                       /AppData/Roaming/Microsoft/Windows/Start Menu/
drwxr-xr-x 1 mel0977 1049089        0 Aug  7  2017 TCCM_B1/
drwxr-xr-x 1 mel0977 1049089        0 Okt 18  2016 tesla/
drwxr-xr-x 1 mel0977 1049089        0 Nov  5  2018 Tracing/
drwxr-xr-x 1 mel0977 1049089        0 Jul 29 09:03 Videos/
lrwxrwxrwx 1 mel0977 1049089       60 Jul  1  2019 Vorlagen -> /c/Users/mel0977/                       AppData/Roaming/Microsoft/Windows/Templates/
drwxr-xr-x 1 mel0977 1049089        0 Jul 20  2017 workspace/
drwxr-xr-x 1 mel0977 1049089        0 Jul 12  2016 workspace_CAN_Standard/
drwxr-xr-x 1 mel0977 1049089        0 Jun 25 19:41 workspace_ctc_v6.2r2/
drwxr-xr-x 1 mel0977 1049089        0 Apr 28  2016 workspace_linStick/
drwxr-xr-x 1 mel0977 1049089        0 Apr 12  2016 workspace2/
drwxr-xr-x 1 mel0977 1049089        0 Apr 28  2016 workspace3/
drwxr-xr-x 1 mel0977 1049089        0 Dez 21  2016 workspace4/
drwxr-xr-x 1 mel0977 1049089        0 Okt 18  2016 workspace5/
drwxr-xr-x 1 mel0977 1049089        0 Jun 25 19:41 WorkspaceTest2/

mel0977@EWSOWKS0543 MINGW64 ~
$ ls
3D Objects/               Documents/              LIN_Gateway/
48V_Aurix_SmartActuator/  Downloads/              Links/
a.sce                     Druckumgebung@          Lokale Einstellungen@
AAM_workspace/            DV/                     MicrosoftEdgeBackups/
adin/                     eclipse/                miktex-console.lock
Anwendungsdaten@          eclipse-workspace/      MPLABXProjects/
AppData/                  Eigene Dateien@         Music/
Application Data/         Favorites/              Netzwerkumgebung@
Aurix_Workspace/          GEN/                    NTUSER.DAT
BW_Gen6_Volvo/            GEN6_workspace/         ntuser.dat.LOG1
Contacts/                 IntelGraphicsProfiles/  ntuser.dat.LOG2
Cookies@                  jlr/                    NTUSER.DAT{1c3790b4-b8ad-11e8-aa21-e41d2d101530}.TM.b
dana/                     jlr_pr/                 NTUSER.DAT{1c3790b4-b8ad-11e8-aa21-e41d2d101530}.TMCo
Desktop/                  jlr_pr1/                NTUSER.DAT{1c3790b4-b8ad-11e8-aa21-e41d2d101530}.TMCo

mel0977@EWSOWKS0543 MINGW64 ~
$ cd Desktop/

mel0977@EWSOWKS0543 MINGW64 ~/Desktop
$ ls
~$13-10-18_PROJEKT_dokumentvorlage_v12.docx               desktop.ini                              Micr
~$20-05-26_AMK-LVA2_PCB_Connections.docx                  Dev-C++.lnk*                             Oper
~$Fault_Bug_Fix.pptx                                      git_vjezba/                              Real
~WRL3254.tmp                                              git_vjezba2/                             Star
11667532_876553479047463_5378707911766693409_n.jpg        Melecs_HR_Checkliste Austritt (002).pdf  Star
2020-10-20_AMK_LVA2_MV0729E_TestSpecification_for_TE.pdf  Microsoft Edge.lnk*                      Star

mel0977@EWSOWKS0543 MINGW64 ~/Desktop
$ cd git_vjezba

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba
$ git init
Initialized empty Git repository in C:/Users/mel0977/Desktop/git_vjezba/.git/

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git status
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        Makefile.win
        Project1.dev
        Project1.exe
        Project1.layout
        Rectangle.c
        Rectangle.h
        Rectangle.o
        main.c
        main.o

nothing added to commit but untracked files present (use "git add" to track)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git branch

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ gitk &
[1] 6080

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git gui
[1]+  Done                    gitk

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ gitk &
[1] 12712

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git push
fatal: No configured push destination.
Either specify the URL from the command-line or configure a remote repository using

    git remote add <name> <url>

and then push using the remote name

    git push <name>


mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git remote add https://github.com/kpasa/test.git
usage: git remote add [<options>] <name> <url>

    -f, --fetch           fetch the remote branches
    --tags                import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --track <branch>  branch(es) to track
    -m, --master <branch>
                          master branch
    --mirror[=<push|fetch>]
                          set up remote as a mirror to push to or fetch from


mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git remote add origin https://github.com/kpasa/test.git

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git gui

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git status
On branch master
nothing to commit, working directory clean

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git checkout -b KPA-f1
Switched to a new branch 'KPA-f1'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git status
On branch KPA-f1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   main.c

no changes added to commit (use "git add" and/or "git commit -a")

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git gui

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git checkout master
Switched to branch 'master'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git checkout KPA-f1
Switched to branch 'KPA-f1'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ ls
main.c  main.o  Makefile.win  Project1.dev  Project1.exe*  Project1.layout  Rectangle.c  Rectangle.h  R

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ touch kpatest.txt4

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git status
On branch KPA-f1
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        kpatest.txt4

nothing added to commit but untracked files present (use "git add" to track)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git status
On branch KPA-f1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   main.c

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        kpatest.txt4

no changes added to commit (use "git add" and/or "git commit -a")

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git reset HEAD ~1
Unstaged changes after reset:
M       main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git status
On branch KPA-f1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   main.c

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        kpatest.txt4

no changes added to commit (use "git add" and/or "git commit -a")

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git reset e67953764096018d4f213221b3ab7a3173109911
Unstaged changes after reset:
M       main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git status
On branch KPA-f1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   main.c

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        kpatest.txt4

no changes added to commit (use "git add" and/or "git commit -a")

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git gui

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git status
On branch KPA-f1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   main.c

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        kpatest.txt4

no changes added to commit (use "git add" and/or "git commit -a")

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ ls
kpatest.txt4  main.c  main.o  Makefile.win  Project1.dev  Project1.exe*  Project1.layout  Rectangle.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ cat main.c
#include <stdio.h>
#include <stdlib.h>

#include "Rectangle.h""
/* run this program using the console pauser or add your own getch, system("pause") or input loop */

int main(int argc, char *argv[]) {

        Rectangle_t rect;

        rect.a = 3;
        rect.b = 4;

        printf("Rectangle area: %ld\n",Rectangle_Area(&rect));


        printf("Hallo world! \n");
        printf("Hallo world od KPASA1 f1! \n");
        printf("Hallo world od KPASA2 f1! \n");
        printf("Hallo world od KPASA3 f1! \n");
        printf("Hallo world od KPASA4 f1! \n");
        printf("Hallo world od KPASA5 f1! \n");
        return 0;
}

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Forward-port local commits to the updated upstream head
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
[1]+  Done                    gitk

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba
$ git status
fatal: Not a git repository (or any of the parent directories): .git

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba
$ git init
Initialized empty Git repository in C:/Users/mel0977/Desktop/git_vjezba/.git/

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ gitk &
[1] 16068

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git status
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        Makefile.win
        Project1.dev
        Project1.exe
        Project1.layout
        Rectangle.c
        Rectangle.h
        Rectangle.o
        main.c
        main.o

nothing added to commit but untracked files present (use "git add" to track)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git gui
[1]+  Done                    gitk

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git status
On branch master
nothing to commit, working directory clean

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git branch
* master

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git log --online --graph
fatal: unrecognized argument: --online

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git log --oneline --graph
* c20f6e3 init commit

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ gitk &
[1] 10344

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git push
fatal: No configured push destination.
Either specify the URL from the command-line or configure a remote repository using

    git remote add <name> <url>

and then push using the remote name

    git push <name>


mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git remote add origin https://github.com/kpasa/test.git

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git push
warning: push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master


mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git gui

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git checkout -b KPA-f1
Switched to a new branch 'KPA-f1'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ ls
main.c  main.o  Makefile.win  Project1.dev  Project1.exe*  Project1.layout  Rectangle.c  Rectangle.h  R

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ vi main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git status
On branch KPA-f1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   main.c

no changes added to commit (use "git add" and/or "git commit -a")

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git status
On branch KPA-f1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   main.c

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt

no changes added to commit (use "git add" and/or "git commit -a")

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git gui

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git status
On branch KPA-f1
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt

nothing added to commit but untracked files present (use "git add" to track)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git checkout master
Switched to branch 'master'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (master)
$ git checkout -b SBU-f1
Switched to a new branch 'SBU-f1'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ ls
1_kpa_local.txt  main.c  main.o  Makefile.win  Project1.dev  Project1.exe*  Project1.layout  Rectangle.

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ vi main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git status
On branch SBU-f1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   main.c

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt

no changes added to commit (use "git add" and/or "git commit -a")

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git add main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git status
On branch SBU-f1
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   main.c

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt


mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git commit -m "saidov prvi commit"
[SBU-f1 2e0f864] saidov prvi commit
 1 file changed, 1 insertion(+), 1 deletion(-)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git gui

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git checkout KPA-f1
Switched to branch 'KPA-f1'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git rebase 2e0f864
First, rewinding head to replay your work on top of it...
Applying: prvi commit iz kpa f1
Using index info to reconstruct a base tree...
M       main.c
Falling back to patching base and 3-way merge...
Auto-merging main.c
CONFLICT (content): Merge conflict in main.c
error: Failed to merge in the changes.
Patch failed at 0001 prvi commit iz kpa f1
The copy of the patch that failed is found in: .git/rebase-apply/patch

When you have resolved this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".


mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|REBASE 1/1)
$ vi main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|REBASE 1/1)
$ git rebase --continue
main.c: needs merge
You must edit all merge conflicts and then
mark them as resolved using git add

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|REBASE 1/1)
$ git status
rebase in progress; onto 2e0f864
You are currently rebasing branch 'KPA-f1' on '2e0f864'.
  (fix conflicts and then run "git rebase --continue")
  (use "git rebase --skip" to skip this patch)
  (use "git rebase --abort" to check out the original branch)

Unmerged paths:
  (use "git reset HEAD <file>..." to unstage)
  (use "git add <file>..." to mark resolution)

        both modified:   main.c

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt

no changes added to commit (use "git add" and/or "git commit -a")

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|REBASE 1/1)
$ git add main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|REBASE 1/1)
$ git status
rebase in progress; onto 2e0f864
You are currently rebasing branch 'KPA-f1' on '2e0f864'.
  (all conflicts fixed: run "git rebase --continue")

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   main.c

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt


mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|REBASE 1/1)
$ git rebase --continue
Applying: prvi commit iz kpa f1

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git reset --hard b0e60fac21c2120042ad56839768312ba46a19b5
HEAD is now at b0e60fa prvi commit iz kpa f1

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git status
On branch KPA-f1
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt

nothing added to commit but untracked files present (use "git add" to track)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git checkout b0e60fac21c2120042ad56839768312ba46a19b5
Note: checking out 'b0e60fac21c2120042ad56839768312ba46a19b5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at b0e60fa... prvi commit iz kpa f1

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba ((b0e60fa...))
$ git status
HEAD detached at b0e60fa
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt

nothing added to commit but untracked files present (use "git add" to track)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba ((b0e60fa...))
$ git checkout 4f0dd32d691871630c323576112dbde57d681137
Previous HEAD position was b0e60fa... prvi commit iz kpa f1
HEAD is now at 4f0dd32... prvi commit iz kpa f1

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba ((4f0dd32...))
$ git checkout KPA-f1
Warning: you are leaving 1 commit behind, not connected to
any of your branches:

  4f0dd32 prvi commit iz kpa f1

If you want to keep it by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 4f0dd32

Switched to branch 'KPA-f1'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git rebase 4f0dd32d691871630c323576112dbde57d681137
First, rewinding head to replay your work on top of it...
Applying: prvi commit iz kpa f1
Using index info to reconstruct a base tree...
M       main.c
Falling back to patching base and 3-way merge...
Auto-merging main.c
CONFLICT (content): Merge conflict in main.c
error: Failed to merge in the changes.
Patch failed at 0001 prvi commit iz kpa f1
The copy of the patch that failed is found in: .git/rebase-apply/patch

When you have resolved this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".


mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|REBASE 1/1)
$ vi main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|REBASE 1/1)
$ git add main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|REBASE 1/1)
$ git rebase --continue
Applying: prvi commit iz kpa f1

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git status
On branch KPA-f1
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt

nothing added to commit but untracked files present (use "git add" to track)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git log --oneline --graph
* 016077d prvi commit iz kpa f1
* 4f0dd32 prvi commit iz kpa f1
* 2e0f864 saidov prvi commit
* c20f6e3 init commit

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git log --oneline --decorate --graph
* 016077d (HEAD -> KPA-f1) prvi commit iz kpa f1
* 4f0dd32 prvi commit iz kpa f1
* 2e0f864 (origin/SBU-f1, SBU-f1) saidov prvi commit
* c20f6e3 (origin/master, master) init commit

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git checkout b0e60fac21c2120042ad56839768312ba46a19b5
Note: checking out 'b0e60fac21c2120042ad56839768312ba46a19b5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at b0e60fa... prvi commit iz kpa f1

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba ((b0e60fa...))
$ git checkout KPA-f1
Previous HEAD position was b0e60fa... prvi commit iz kpa f1
Switched to branch 'KPA-f1'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git gui

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ vi main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git gui

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git rebase --interactive 2e0f864d08bb3cec26af1f29e4b552f80c56d0e8
error: could not apply 016077d... prvi commit iz kpa f1

When you have resolved this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".
Could not apply 016077dced9d821223ea88c34a8fccb4162eb669... prvi commit iz kpa f1

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|REBASE-i 2/3)
$ git status
interactive rebase in progress; onto 2e0f864
Last commands done (2 commands done):
   d 4f0dd32 prvi commit iz kpa f1
   pick 016077d prvi commit iz kpa f1
Next command to do (1 remaining command):
   pick dff40ca najnoviji pasa
  (use "git rebase --edit-todo" to view and edit)
You are currently rebasing branch 'KPA-f1' on '2e0f864'.
  (fix conflicts and then run "git rebase --continue")
  (use "git rebase --skip" to skip this patch)
  (use "git rebase --abort" to check out the original branch)

Unmerged paths:
  (use "git reset HEAD <file>..." to unstage)
  (use "git add <file>..." to mark resolution)

        both modified:   main.c

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt

no changes added to commit (use "git add" and/or "git commit -a")

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|REBASE-i 2/3)
$ vi main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|REBASE-i 2/3)
$ git add main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|REBASE-i 2/3)
$ git rebase --continue
[detached HEAD 3e3cc34] prvi commit iz kpa f1
 1 file changed, 1 insertion(+), 1 deletion(-)
Successfully rebased and updated refs/heads/KPA-f1.

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git rebase --interactive 2e0f864d08bb3cec26af1f29e4b552f80c56d0e8
Successfully rebased and updated refs/heads/KPA-f1.

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git checkout SBU-f1
Switched to branch 'SBU-f1'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ vi main,c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ vi main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ vi main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git add main
main,c  main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git add main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git status
On branch SBU-f1
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   main.c

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt
        main,c


mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git commit -m "saidovi komentari"
[SBU-f1 b094fc5] saidovi komentari
 1 file changed, 2 insertions(+)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git gui

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git fetch origin/SBU-f1
fatal: 'origin/SBU-f1' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git fetch origin/test
fatal: 'origin/test' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git fetch origin/test

fatal: 'origin/test' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.


mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git fetch
remote: Enumerating objects: 9, done.
remote: Counting objects: 100% (9/9), done.
remote: Compressing objects: 100% (6/6), done.
remote: Total 7 (delta 2), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (7/7), done.
From https://github.com/kpasa/test
   b094fc5..e74fc1e  SBU-f1     -> origin/SBU-f1
 * [new branch]      main       -> origin/main

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (SBU-f1)
$ git checkout KPA-f1
Switched to branch 'KPA-f1'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git checkout origin/SBU-f1
Note: checking out 'origin/SBU-f1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at e74fc1e... dodali 4 said

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba ((e74fc1e...))
$ cat main.c
#include <stdio.h>
#include <stdlib.h>

#include "Rectangle.h""
/* run this program using the console pauser or add your own getch, system("pause") or input loop */

int main(int argc, char *argv[]) {

        Rectangle_t rect;

        rect.a = 3;
        rect.b = 4;

        printf("Rectangle area: %ld\n",Rectangle_Area(&rect));

        printf("Saidov f1");
        //2 said
        //3 said
        //4 said
        printf("Hallo world! \n");
        return 0;
}

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba ((e74fc1e...))
$ git checkout -b ATA
Switched to a new branch 'ATA'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ gti diff
bash: gti: command not found

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ gti diff 3ac302c591ccf12da7f7a543282b081415b98c9e
bash: gti: command not found

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ git diff 3ac302c591ccf12da7f7a543282b081415b98c9e
diff --git a/main.c b/main.c
index d11eb35..af2ac39 100644
--- a/main.c
+++ b/main.c
@@ -14,7 +14,9 @@ int main(int argc, char *argv[]) {
        printf("Rectangle area: %ld\n",Rectangle_Area(&rect));

        printf("Saidov f1");
+       //2 said
+       //3 said
+       //4 said
        printf("Hallo world! \n");
-       printf("pasin novi c1");
        return 0;
 }

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ git cherry-pick   return 0;
fatal: bad revision 'return'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ git cherry-pick 3ac302c591ccf12da7f7a543282b081415b98c9e
[ATA 5f8d661] najnoviji pasa
 Date: Sat Nov 21 17:17:40 2020 +0100
 1 file changed, 1 insertion(+)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ cat main.c
#include <stdio.h>
#include <stdlib.h>

#include "Rectangle.h""
/* run this program using the console pauser or add your own getch, system("pause") or input loop */

int main(int argc, char *argv[]) {

        Rectangle_t rect;

        rect.a = 3;
        rect.b = 4;

        printf("Rectangle area: %ld\n",Rectangle_Area(&rect));

        printf("Saidov f1");
        //2 said
        //3 said
        //4 said
        printf("Hallo world! \n");
        printf("pasin novi c1");
        return 0;
}

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ git gui

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ git checkout KPA-f1
Switched to branch 'KPA-f1'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git rebase

There is no tracking information for the current branch.
Please specify which branch you want to rebase against.
See git-rebase(1) for details

    git rebase <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> KPA-f1


mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git rebase e74fc1e4e2e0ac113e3d497cdd0e9128cb4254ba
First, rewinding head to replay your work on top of it...
Applying: najnoviji pasa
Using index info to reconstruct a base tree...
M       main.c
Falling back to patching base and 3-way merge...
Auto-merging main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ vi main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git diff e74fc1e4e2e0ac113e3d497cdd0e9128cb4254ba
diff --git a/main.c b/main.c
index af2ac39..7e510f0 100644
--- a/main.c
+++ b/main.c
@@ -18,5 +18,6 @@ int main(int argc, char *argv[]) {
        //3 said
        //4 said
        printf("Hallo world! \n");
+       printf("pasin novi c1");
        return 0;
 }

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git status
On branch KPA-f1
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt
        main,c

nothing added to commit but untracked files present (use "git add" to track)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git checkout ATA
Switched to branch 'ATA'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ vi main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ git gui

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ gitk &
[2] 15976
[1]   Done                    gitk

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ vi main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ git add main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ git commit -m "drugi ata komm"
[ATA 803451f] drugi ata komm
 1 file changed, 1 insertion(+)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ git checkout KPA-f1
Switched to branch 'KPA-f1'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git checkout ATA
Switched to branch 'ATA'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ git checkout KPA-f1
Switched to branch 'KPA-f1'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git merge 803451fc86b6a8da3536332fab0f8ee0ca1a823f
Auto-merging main.c
CONFLICT (content): Merge conflict in main.c
Automatic merge failed; fix conflicts and then commit the result.

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|MERGING)
$ vi main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|MERGING)
$ git add main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1|MERGING)
$ git commit -m "mergeeg"
[KPA-f1 6579d22] mergeeg

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ gitk &
[3] 14788
[2]   Done                    gitk

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git status
On branch KPA-f1
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt
        main,c

nothing added to commit but untracked files present (use "git add" to track)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ vi main.c

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git checkout ATA
error: Your local changes to the following files would be overwritten by checkout:
        main.c
Please, commit your changes or stash them before you can switch branches.
Aborting

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git stash
Saved working directory and index state WIP on KPA-f1: 6579d22 mergeeg
HEAD is now at 6579d22 mergeeg

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git checkout ATA
Switched to branch 'ATA'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ git status
On branch ATA
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt
        main,c

nothing added to commit but untracked files present (use "git add" to track)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (ATA)
$ git checkout KPA-f1
Switched to branch 'KPA-f1'

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ cat main.c
#include <stdio.h>
#include <stdlib.h>

#include "Rectangle.h""
/* run this program using the console pauser or add your own getch, system("pause") or input loop */

int main(int argc, char *argv[]) {

        Rectangle_t rect;

        rect.a = 3;
        rect.b = 4;

        printf("Rectangle area: %ld\n",Rectangle_Area(&rect));

        printf("Saidov f1");
        //2 said
        //3 said
        //4 said
        printf("Hallo world! \n");
        printf("pasin novi c1");
        //ata komm
        //ata komm2

        return 0;
}

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ git stash pop
On branch KPA-f1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   main.c

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        1_kpa_local.txt
        main,c

no changes added to commit (use "git add" and/or "git commit -a")
Dropped refs/stash@{0} (d4f3f41e91b329f2c56f0a4f2aec9ca2a5cbb818)

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$ cat main.c
#include <stdio.h>
#include <stdlib.h>

#include "Rectangle.h""
/* run this program using the console pauser or add your own getch, system("pause") or input loop */

int main(int argc, char *argv[]) {

        Rectangle_t rect;

        rect.a = 3;
        rect.b = 4;

        printf("Rectangle area: %ld\n",Rectangle_Area(&rect));

        printf("Saidov f1");
        //2 said
        //3 said
        //4 said
        printf("Hallo world! \n");
        printf("pasin novi c1");
        //ata komm
        //ata komm2
        //stash

        return 0;
}

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
$

mel0977@EWSOWKS0543 MINGW64 ~/Desktop/git_vjezba (KPA-f1)
